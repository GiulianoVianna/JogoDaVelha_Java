package View;

import com.formdev.flatlaf.FlatDarkLaf;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

public class frmJogoDaVelha extends javax.swing.JFrame {

    private char jogadorAtual; // Mantém o controle do jogador atual ('X' ou 'O')
    private char[][] tabuleiro; // Matriz 3x3 que representa o tabuleiro

    int vitorias1 = 0;
    int vitorias2 = 0;

    /**
     * Creates new form frmJogoDaVelha
     */
    public frmJogoDaVelha() {
        initComponents();

        // Centraliza a janela
        setLocationRelativeTo(null);

        // Define o ícone da janela
        ImageIcon icone = new ImageIcon(frmJogoDaVelha.class.getResource("/Imagens/jogodavelha.png"));
        setIconImage(icone.getImage());

        this.jogadorAtual = 'X'; // O jogador 'X' sempre começa
        this.tabuleiro = new char[3][3]; // Inicializa o tabuleiro

        inicializaTabuleiro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtJogador1 = new javax.swing.JTextField();
        txtJogador2 = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        lbVitoriasJogador2 = new javax.swing.JLabel();
        lbVitoriasJogador1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnPlay = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogo da Velha");
        setResizable(false);

        btn2.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn2.setForeground(new java.awt.Color(153, 102, 255));
        btn2.setEnabled(false);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn3.setForeground(new java.awt.Color(153, 102, 255));
        btn3.setEnabled(false);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn1.setForeground(new java.awt.Color(153, 102, 255));
        btn1.setEnabled(false);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn5.setForeground(new java.awt.Color(153, 102, 255));
        btn5.setEnabled(false);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn6.setForeground(new java.awt.Color(153, 102, 255));
        btn6.setEnabled(false);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn4.setForeground(new java.awt.Color(153, 102, 255));
        btn4.setEnabled(false);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn8.setForeground(new java.awt.Color(153, 102, 255));
        btn8.setEnabled(false);
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn9.setForeground(new java.awt.Color(153, 102, 255));
        btn9.setEnabled(false);
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        btn7.setForeground(new java.awt.Color(153, 102, 255));
        btn7.setEnabled(false);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 102, 255));
        jLabel1.setText("Jogador 1:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 102, 255));
        jLabel2.setText("Jogador 2:");

        txtJogador1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtJogador2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnNovo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnNovo.setForeground(new java.awt.Color(153, 102, 255));
        btnNovo.setText("Novo");
        btnNovo.setEnabled(false);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        lbVitoriasJogador2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbVitoriasJogador2.setForeground(new java.awt.Color(153, 102, 255));
        lbVitoriasJogador2.setText("0");

        lbVitoriasJogador1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbVitoriasJogador1.setForeground(new java.awt.Color(153, 102, 255));
        lbVitoriasJogador1.setText("0");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 102, 255));
        jLabel5.setText("Vitórias");

        btnPlay.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnPlay.setForeground(new java.awt.Color(153, 102, 255));
        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnReset1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnReset1.setForeground(new java.awt.Color(153, 102, 255));
        btnReset1.setText("Reset");
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(262, 262, 262)
                                .addComponent(jLabel5)
                                .addGap(19, 19, 19))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtJogador1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtJogador2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbVitoriasJogador2)
                                    .addComponent(lbVitoriasJogador1))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnReset1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtJogador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVitoriasJogador1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtJogador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbVitoriasJogador2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        validarUsuario();

    }//GEN-LAST:event_btnPlayActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novoJogo();
        inicializaTabuleiro();
        this.jogadorAtual = 'X';
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        atualizaBotaoEJogador(btn1, 0, 0);
        verificaVencedor();
        trocaJogador();

    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        atualizaBotaoEJogador(btn2, 0, 1);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        atualizaBotaoEJogador(btn3, 0, 2);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        atualizaBotaoEJogador(btn4, 1, 0);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        atualizaBotaoEJogador(btn5, 1, 1);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        atualizaBotaoEJogador(btn6, 1, 2);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        atualizaBotaoEJogador(btn7, 2, 0);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        atualizaBotaoEJogador(btn8, 2, 1);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        atualizaBotaoEJogador(btn9, 2, 2);
        verificaVencedor();
        trocaJogador();
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        resetJogo();
    }//GEN-LAST:event_btnReset1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        // Chama o método para configurar o tema antes de tornar a janela visível
        configurarTemaFlatLafDark();

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmJogoDaVelha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnReset1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbVitoriasJogador1;
    private javax.swing.JLabel lbVitoriasJogador2;
    private javax.swing.JTextField txtJogador1;
    private javax.swing.JTextField txtJogador2;
    // End of variables declaration//GEN-END:variables

    /**
     * Inicializa o tabuleiro do jogo com espaços em branco. Este método é
     * chamado geralmente quando uma nova partida é iniciada.
     *
     * Parâmetros: Nenhum. Retorno: Nenhum.
     */
    private void inicializaTabuleiro() {
        // Iterando pelas linhas do tabuleiro
        for (int linha = 0; linha < 3; linha++) {
            // Iterando pelas colunas do tabuleiro
            for (int coluna = 0; coluna < 3; coluna++) {
                // Definindo cada célula como um espaço em branco
                tabuleiro[linha][coluna] = ' ';
            }
        }
    }

    /**
     * Altera o jogador atual entre 'X' e 'O'. Este método é geralmente chamado
     * após um jogador fazer uma jogada, para alternar o controle para o outro
     * jogador.
     *
     * Parâmetros: Nenhum. Retorno: Nenhum.
     */
    public void trocaJogador() {
        // Utiliza o operador ternário para alternar entre 'X' e 'O'
        this.jogadorAtual = (this.jogadorAtual == 'X') ? 'O' : 'X';
    }

    /**
     * Atualiza o texto do JButton passado como parâmetro e o valor na matriz do
     * tabuleiro com o símbolo do jogador atual. Este método é geralmente
     * chamado após um jogador clicar em um dos botões no tabuleiro do jogo da
     * velha.
     *
     * @param botao O JButton que foi clicado pelo usuário.
     * @param linha A coordenada da linha na matriz do tabuleiro onde o botão
     * clicado se localiza.
     * @param coluna A coordenada da coluna na matriz do tabuleiro onde o botão
     * clicado se localiza.
     *
     * Retorno: Nenhum.
     */
    private void atualizaBotaoEJogador(JButton botao, int linha, int coluna) {
        // Atualiza o texto do botão com o símbolo do jogador atual ('X' ou 'O')
        botao.setText(String.valueOf(jogadorAtual));

        // Atualiza a matriz do tabuleiro na posição correspondente com o símbolo do jogador atual
        tabuleiro[linha][coluna] = jogadorAtual;
    }

    /**
     * Verifica se há um vencedor no jogo da velha. Este método examina todas as
     * linhas, colunas e diagonais para ver se algum jogador ganhou o jogo.
     *
     * @return boolean Retorna verdadeiro se encontrou um vencedor, caso
     * contrário, falso.
     */
    public boolean verificaVencedor() {
        // Verifica todas as linhas para encontrar um vencedor
        for (int i = 0; i < 3; i++) {
            if (tabuleiro[i][0] != ' '
                    && tabuleiro[i][0] == tabuleiro[i][1]
                    && tabuleiro[i][0] == tabuleiro[i][2]) {

                contadorVitorias(); // Atualiza o contador de vitórias
                return true; // Temos um vencedor
            }

            // Verifica todas as colunas para encontrar um vencedor
            if (tabuleiro[0][i] != ' '
                    && tabuleiro[0][i] == tabuleiro[1][i]
                    && tabuleiro[0][i] == tabuleiro[2][i]) {

                contadorVitorias(); // Atualiza o contador de vitórias
                return true; // Temos um vencedor
            }
        }

        // Verifica a diagonal principal
        if (tabuleiro[0][0] != ' '
                && tabuleiro[0][0] == tabuleiro[1][1]
                && tabuleiro[0][0] == tabuleiro[2][2]) {

            contadorVitorias(); // Atualiza o contador de vitórias
            return true; // Temos um vencedor
        }

        // Verifica a diagonal secundária
        if (tabuleiro[0][2] != ' '
                && tabuleiro[0][2] == tabuleiro[1][1]
                && tabuleiro[0][2] == tabuleiro[2][0]) {

            contadorVitorias(); // Atualiza o contador de vitórias
            return true; // Temos um vencedor
        }

        return false; // Não temos um vencedor
    }

    /**
     * Habilita todos os botões do jogo e o botão de reset, enquanto desabilita
     * o botão de iniciar jogo. Este método é chamado geralmente quando uma nova
     * partida é iniciada.
     */
    private void habilitaCampos() {

        // Array para armazenar os botões que devem ser habilitados.
        // Isso facilita o gerenciamento dos botões em um loop, evitando redundância.
        JButton[] botoes = {btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btnNovo};

        // Loop foreach para habilitar cada botão no array de botões.
        // A variável 'botao' assume o valor de cada elemento do array 'botoes' a cada iteração do loop.
        for (JButton botao : botoes) {
            botao.setEnabled(true); // Habilita o botão da iteração atual
        }

        // Desabilita o botão de iniciar jogo.
        // Isso é feito porque a partida está prestes a começar ou já começou.
        btnPlay.setEnabled(false);
    }

    /**
     * Prepara o ambiente para um novo jogo. Desabilita os botões do tabuleiro e
     * limpa seus textos, além de habilitar o botão de iniciar jogo e
     * desabilitar o botão de novo jogo.
     */
    private void novoJogo() {

        // Array para armazenar os botões do tabuleiro.
        // A ideia é facilitar a manipulação dos botões em um loop, reduzindo a repetição de código.
        JButton[] botoes = {btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9};

        // Loop para percorrer cada botão no array de botões.
        for (JButton botao : botoes) {
            botao.setEnabled(false); // Desabilita o botão da iteração atual.
            botao.setText("");       // Limpa o texto do botão da iteração atual.
        }

        // Habilita o botão de iniciar o jogo, pois o estado agora é "pronto para iniciar".
        btnPlay.setEnabled(true);

        // Desabilita o botão de novo jogo, já que um novo jogo ainda não foi iniciado.
        btnNovo.setEnabled(false);
    }

    /**
     * Conta e exibe o número de vitórias para o jogador atual. Este método é
     * chamado quando um jogador vence a partida.
     */
    private void contadorVitorias() {

        // Verifica se o jogador atual é 'X'
        if (jogadorAtual == 'X') {
            // Exibe uma mensagem de vitória para o jogador 1
            JOptionPane.showMessageDialog(null, "Vitória do Jogador(a) " + txtJogador1.getText());

            // Incrementa o contador de vitórias do jogador 1
            vitorias1 += 1;

            // Atualiza o rótulo da interface com o novo número de vitórias do jogador 1
            lbVitoriasJogador1.setText(Integer.toString(vitorias1));
        }

        // Verifica se o jogador atual é 'O'
        if (jogadorAtual == 'O') {
            // Exibe uma mensagem de vitória para o jogador 2
            JOptionPane.showMessageDialog(null, "Vitória do Jogador(a) " + txtJogador2.getText());

            // Incrementa o contador de vitórias do jogador 2
            vitorias2 += 1;

            // Atualiza o rótulo da interface com o novo número de vitórias do jogador 2
            lbVitoriasJogador2.setText(Integer.toString(vitorias2));
        }
    }

    /**
     * Configura o tema da interface gráfica para FlatLaf Dark. Este método é
     * chamado para aplicar o tema escuro na interface.
     */
    public static void configurarTemaFlatLafDark() {
        try {
            // Tentativa de definir o tema FlatLaf Dark como Look and Feel da aplicação
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            // Caso o tema não possa ser aplicado, imprime o rastreamento de pilha para diagnóstico
            ex.printStackTrace();
        }
    }

    /**
     * Reseta o estado do jogo para o estado inicial. Este método é chamado
     * quando o usuário decide iniciar uma nova série de jogos.
     */
    private void resetJogo() {
        // Chama o método para iniciar um novo jogo, desabilitando botões e limpando seus textos
        novoJogo();

        // Chama o método para inicializar o tabuleiro, limpando todas as células
        inicializaTabuleiro();

        // Define o jogador inicial como 'X'
        jogadorAtual = 'X';

        // Limpa os campos de texto dos nomes dos jogadores
        txtJogador1.setText("");
        txtJogador2.setText("");

        // Reseta o contador de vitórias de ambos os jogadores para 0, usando formato hexadecimal
        lbVitoriasJogador1.setText(Integer.toHexString(0));
        lbVitoriasJogador2.setText(Integer.toHexString(0));
    }

    /**
     * Valida a entrada do usuário nos campos de texto para os nomes dos
     * jogadores. Este método é geralmente chamado antes do início de uma nova
     * partida.
     */
    private void validarUsuario() {

        // Obtém os nomes dos jogadores a partir dos campos de texto e remove espaços em branco no início e no final
        String nomeJogador1 = txtJogador1.getText().trim();
        String nomeJogador2 = txtJogador2.getText().trim();

        // Verifica se algum dos campos de texto dos nomes dos jogadores está vazio
        if (nomeJogador1.isEmpty() || nomeJogador2.isEmpty()) {

            // Se algum campo estiver vazio, mostra uma caixa de diálogo informativa
            JOptionPane.showMessageDialog(null, "Favor informar os nomes dos Jogadores!", "Informação", JOptionPane.INFORMATION_MESSAGE);

        } else {

            // Se ambos os campos estiverem preenchidos, habilita os campos para começar o jogo
            habilitaCampos();
        }
    }

}
